{"version":3,"sources":["webpack:///./color-data.js","webpack:///./index.js"],"names":["colors","intervalId","colorId","refs","body","document","querySelector","btnStart","btnStop","addEventListener","disabled","setInterval","curentColorId","randomIntegerFromInterval","length","console","log","style","backgroundColor","clearInterval","min","max","Math","floor","random"],"mappings":"uIASeA,EATA,CACb,UACA,UACA,UACA,UACA,UACA,WCHEC,EAAa,EACbC,EAAU,EAERC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,SAAUF,SAASC,cAAc,yBACjCE,QAASH,SAASC,cAAc,yBAGlCH,EAAKI,SAASE,iBAAiB,SAG/B,WACEN,EAAKI,SAASG,UAAW,EAEzBT,EAAaU,aAAY,WAEvB,IAAIC,EAAgBC,EAA0B,EAAGb,EAAOc,OAAS,GAC7DF,IAAkBV,GACpBU,IAEFV,EAAUU,IAAkBZ,EAAOc,OAAS,EAAIF,EAChDG,QAAQC,IAAId,GACZC,EAAKC,KAAKa,MAAMC,gBAAkBlB,EAAOE,KACxC,QAdLC,EAAKK,QAAQC,iBAAiB,SAiB9B,WACEN,EAAKI,SAASG,UAAW,EACzBS,cAAclB,MAGhB,IAAMY,EAA4B,SAACO,EAAKC,GACtC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,M","file":"main.a8823d57870cdb9e962d.js","sourcesContent":["const colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];\r\n\r\nexport default colors;\r\n","import './styles.css';\nimport colors from './color-data';\n\nlet intervalId = 0;\nlet colorId = 0;\n\nconst refs = {\n  body: document.querySelector('body'),\n  btnStart: document.querySelector('[data-action=\"start\"]'),\n  btnStop: document.querySelector('[data-action=\"stop\"]'),\n};\n\nrefs.btnStart.addEventListener('click', onBtnStart);\nrefs.btnStop.addEventListener('click', onBtnStop);\n\nfunction onBtnStart() {\n  refs.btnStart.disabled = true;\n\n  intervalId = setInterval(() => {\n    //если текущий фон такой же, возьмем следующий по индексу\n    let curentColorId = randomIntegerFromInterval(0, colors.length - 1);\n    if (curentColorId === colorId) {\n      curentColorId++;\n    }\n    colorId = curentColorId === colors.length ? 0 : curentColorId;\n    console.log(colorId);\n    refs.body.style.backgroundColor = colors[colorId];\n  }, 1000);\n}\n\nfunction onBtnStop() {\n  refs.btnStart.disabled = false;\n  clearInterval(intervalId);\n}\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n"],"sourceRoot":""}